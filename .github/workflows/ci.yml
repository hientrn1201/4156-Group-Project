name: CI Pipeline

# Automated CI/CD pipeline for building, testing, and quality checks
# Tests with PostgreSQL, skips Ollama for faster builds

on:
  push:
    branches:
      - main
      - ci-cd-setup  # Temporary: for testing CI setup
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_DB: knowledge_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Waiting for PostgreSQL..."
        timeout 60 bash -c 'until nc -z localhost 5432; do sleep 1; done'
        echo "PostgreSQL is ready!"

    - name: Build project
      run: mvn clean compile

    - name: Run unit tests (skip integration tests requiring Ollama)
      run: mvn test -Dtest='!*IntegrationTest,!*IT,!*E2eTest'
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/knowledge_db
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres

    - name: Run code quality checks
      run: |
        echo "Running Checkstyle..."
        mvn checkstyle:check || echo "Checkstyle issues found"
        
        echo "Running PMD..."
        mvn pmd:check || echo "PMD issues found"
        
        echo "Generating coverage report..."
        mvn jacoco:report || echo "Coverage report generation failed"
      continue-on-error: true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: target/surefire-reports/

    - name: Upload coverage report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: target/site/jacoco/

    - name: Build package
      run: mvn package -DskipTests

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: application-jar
        path: target/*.jar

    - name: Print build summary
      if: always()
      run: |
        echo "================================"
        echo "CI Pipeline Complete"
        echo "================================"
        echo "Artifacts uploaded:"
        echo "  - test-results"
        echo "  - coverage-report"
        echo "  - application-jar"
        echo "================================"

